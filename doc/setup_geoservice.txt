Геосервис, принимающий запросы на нахождение маршрутов,
реализованный на Python как wsgi приложение.

ТРЕБОВАНИЯ
ОС Ubuntu 14.04
Веб-сервер Apache 2.4
Python 2.7.xx - обычно уже установлен в системе

СОСТАВ
	каталог html - frontend, веб приложение для тестирования и визуализации
	каталог wsgi_app - сам сервис приложения

УСТАНОВКА
	- mod_wsgi
		  sudo apt-get install -y libapache2-mod-wsgi
		  sudo a2enmod, вводим wsgi
		  sudo service apache2 restart
	- spatialite
		  sudo apt-get install python-pyspatialite
	

НАСТРОЙКА
	- настройка виртуального хоста
		  в каталоге /etc/apache2/sites-enabled создаем файл конфигурации для виртуального хоста,
		  например py_spa.conf. Расширение "conf" обязательно.
		  Пример содержания этого файла у меня:
		  
		  <VirtualHost *:8080>

            ServerName geoserver.py
            ServerAdmin webmaster@example.com

            DocumentRoot /home/user1/www/geoservice_python/html
                ErrorLog ${APACHE_LOG_DIR}/error.log
            <Directory /home/user1/www/geoservice_python/html>
            Order allow,deny
            Allow from all
            </Directory>

                WSGIScriptAlias /route /home/user1/www/geoservice_python/wsgi_app/route.py
                WSGIScriptAlias /nearest /home/user1/www/geoservice_python/wsgi_app/nearest.py
                WSGIScriptAlias /incity /home/user1/www/geoservice_python/wsgi_app/incity.py
                WSGIScriptAlias /land /home/user1/www/geoservice_python/wsgi_app/land.py

                WSGIDaemonProcess geoserver.py processes=2 threads=15 display-name=%{GROUP}
            WSGIProcessGroup geoserver.py


        </VirtualHost>

			
			Директива  DocumentRoot /home/user1/www/geoservice_python/html должна указывать на каталог html
			
			В директиве WSGIScriptAlias /route /home/user1/www/geoservice_python/wsgi_app/route.wsgi
			указывается URL при обращении по которому Apache будет вызывать wsgi приложение и путь к этому приложению
			Таких директив может быть не одна.
			
		перезапускаем веб-сервер	sudo service apache2 restart
		для обращения к веб приложению через браузер добавляем в /etc/hosts строку 127.0.0.1	geoserver.py
		
ИСПОЛЬЗОВАНИЕ
	В файлах route.py и nearest.py  переменной DB_DIR присваиваем путь до каталога с базами данных SQLite(spatialite), в которых
	содержатся графы дорожных сетей.
	
	Открываем в браузере адрес указанный в ServerName, например, в моем случае http://geoserver.py
	Откроется веб-приложение. Интерфейс состоит из карты, выпадающего списка с регионами, радио-кнопкой
	"маршрутизация, ближайший узел", поля в которое выводится время выполнения запроса.
	При первом клике ставится маркер, при втором ставится второй маркер и отображается маршрут. При третьем клике
	возвращение в исходное. При перетаскивании маркера - перепостроение маршрута.
	При переключении на "ближайший узел" ставится маркер в месте клика и в месте расположения ближайшего узла графа дорожной сети.
	
API
	Запрос на поиск маршрута
		GET
		http://server.name/route?data=lat_source,lng_source,lat_target,lng_target,db_filename
		
		Пример: http://geoserver.py/route?data=56.62,47.728765,55.83,48.36,RU-ME.osm.sqlite

		Пример ответа(сокращен): {"type":"LineString","coordinates":[[47.7301384,56.6167473],
		[47.73038019999999,56.6162736],[47.731074,56.61590629999999],[47.73520959999999,56.61613409999999]...]}
	
	Запрос на поиск ближайшего узла
		GET
		http://server.name/nearest?data=lat_point,lng_point,db_filename
		
		Пример: http://geoserver.py/nearest?data=56.62,47.728765,RU-ME.osm.sqlite
		
		Пример ответа: {"type":"Point","coordinates":[47.7301384,56.6167473]}
		
    Запрос на принадлежность точки городу:
        GET
        http://server.name/incity?data=lat_point,lng_point,db_filename
        
        Пример ответа:
        {"incity":true,"city_name":"Ioshkar-Ola","city_lastname":"Йошкар-Ола","city_geometry":
        {"type":"Polygon","coordinates":[[[47.816963195800774,56.61638739807571],
        [47.80220031738281,56.62696490843875],[47.770957946777344,56.6331966963466],
        [47.77576446533203,56.64225927813471],[47.804603576660156,56.64131536077352],
        [47.823829650878906,56.65037599240433],[47.838592529296875,56.66169872107921],
        [47.88047790527344,56.66886802376446],[47.905540466308594,56.65905705522496],
        [47.92133331298828,56.65264081020062],[47.929573059082024,56.646789752671125],
        [47.948455810546875,56.653584444132846],[47.97008514404297,56.65849095988349],
        [47.980728149414055,56.652829538876446],[47.990684509277344,56.64811103856809],
        [48.00098419189453,56.64018262875998],[48.01540374755859,56.63187488793702],
        [48.020896911621094,56.6267760503155],[47.99274444580078,56.619032053538],
        [47.96424865722656,56.626020608371924],[47.936439514160156,56.617520844529714],
        [47.923736572265625,56.61336470784085],[47.917213439941406,56.60448415579752],
        [47.889747619628906,56.60807441765139],[47.88013458251953,56.59957061284579],
        [47.83824920654297,56.611097531363896],[47.81576156616211,56.61015283432441]]]}}
        
     Запрос на принадлежность точки объекту ландшафта:
        GET
        http://server.name/land?data=lat_point,lng_point
        
        Пример ответа:
        {"res":true,"name":"Авіант","sub_type":"industrial","geometry":{"type":"MultiPolygon",
        "coordinates":[[[[30.4405614,50.3051783],[30.4404326,50.30445189999999],[30.4408977,50.3040497],
        [30.441763,50.3040613],[30.4425677,50.303986],[30.44306119999999,50.30382149999999],
        [30.4440053,50.30379409999999],[30.44858659999999,50.3027182],[30.4495736,50.3025126],
        [30.4515622,50.30161689999999],[30.4518412,50.30151409999999],[30.45279599999999,50.3023022],
        [30.45331799999999,50.3025674],[30.4526313,50.30301289999999],[30.45151549999999,50.30354739999999],
        [30.4510542,50.303705],[30.4452284,50.3045205],[30.4405614,50.3051783]]]]},
        "country":"ukraine","id":2596,"avg_lat":50.3033462,"avg_lng":30.4468753}
           
		
Дополнения:
	В связи с добавлением поддержки сетки в запросы (маршрута и ближайшего узла) в конце должен быть добавлен еще параметр "scale".
	Величина scale равна 2**m, где m - параметр m в команде start_mkgrid.py
	
	т.е. если
	./start_mkgrid.py -u -d /home/user1/game1/db -m 2
	
	то:
	http://server.name/route?data=lat_source,lng_source,lat_target,lng_target,db_filename,4
	http://server.name/nearest?data=lat_point,lng_point,db_filename,4
	
	
		
		
	
	
